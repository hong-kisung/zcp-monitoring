#!/bin/bash
# Cloud Z CP Public monitoring component installation script
# I will change this script to golang code

usage() {
  cat <<"EOF"
USAGE:
  install-eks                   : install private access type
  install-eks --access=public   : private is true or false

  install -h,--help             : show this message
EOF
}

install() {
  local provider="eks"
  local access="${1}"

  if [[ "${access}" -ne "private" || "${access}" -ne "public" ]]; then
    echo "Access can private or public"
    exit 1
  fi

  # Set variables
  current_context=$(kubectl config current-context)
  cluster_name=${current_context##*/}
  CLUSTER_NAME=$(echo $cluster_name | tr '[:lower:]' '[:upper:]')
  host_prefix=$(if [ ${cluster_name##*-} = "dev" ]; then echo ${cluster_name#*-}; else remainder=${cluster_name#*-}; echo ${remainder%-*}; fi)
  if [[ "${access}" = "private" ]]; then
    ingress_class="private_nginx"
  elif [[ "${access}" = "public" ]]; then
    ingress_class="nginx"
  fi

  # Clean kustomize resources for cluster
  rm -rf .kustomize/${cluster_name}
  # Create kustomize overlay resource for cluster
  cp -r templates/${provider} .kustomize/${cluster_name}

  # Update ingress and config files
  sed -i '' 's/CLOUDZCP-TEMPLATE/'${CLUSTER_NAME}'/g' .kustomize/${cluster_name}/prometheus/config/prometheus.yml
  sed -i '' 's/template/'${host_prefix}'/g' .kustomize/${cluster_name}/grafana/config/grafana.ini
  sed -i '' 's/template/'${host_prefix}'/g' .kustomize/${cluster_name}/ingress_patch.yaml
  sed -i '' 's/ingress_class/'${ingress_class}'/g' .kustomize/${cluster_name}/ingress_patch.yaml

  # Apply kustomize resources
  kubectl kustomize .kustomize/${cluster_name}
  while true; do
      read -p "## Check this resources before applying. Right? (Input y or n) " yn
      case $yn in
          [Yy]* ) echo "It will be applying this resources to your cluster" && break;;
          [Nn]* ) echo "Exit this program" && exit;;
      esac
  done
  kubectl apply -k .kustomize/${cluster_name}
}

main() {
  if [[ "$#" -eq 0 ]]; then
    install "private"
  elif [[ "$#" -eq 1 ]]; then
    if [[ "${1}" =~ --access=(.+) ]]; then
      echo ${BASH_REMATCH[1]}
      if [[ -z "${BASH_REMATCH[1]}" ]]; then
        install "private"
      else
        install "${BASH_REMATCH[1]}"
      fi
    elif [[ "${1}" == "-h" || "${1}" == "--help" ]]; then
      usage
      exit 1
    fi
  else
    usage
    exit 1
  fi
}

main "$@"